{"version":3,"file":"main.min.js","sources":["main.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    \r\n    // Mobile Menu Toggle\r\n    const mobileToggle = document.querySelector('.mobile-toggle');\r\n    const mobileNav = document.querySelector('.mobile-nav');\r\n    const mainHeader = document.querySelector('.main-header');\r\n    \r\n    if (mobileToggle && mobileNav) {\r\n        mobileToggle.addEventListener('click', function() {\r\n            mobileToggle.classList.toggle('active');\r\n            mobileNav.classList.toggle('active');\r\n            document.body.classList.toggle('menu-open');\r\n        });\r\n        \r\n        // Close mobile menu when clicking on menu links\r\n        const mobileMenuLinks = document.querySelectorAll('.mobile-menu a');\r\n        mobileMenuLinks.forEach(link => {\r\n            link.addEventListener('click', function() {\r\n                mobileToggle.classList.remove('active');\r\n                mobileNav.classList.remove('active');\r\n                document.body.classList.remove('menu-open');\r\n            });\r\n        });\r\n        \r\n        // Close mobile menu when clicking outside\r\n        document.addEventListener('click', function(e) {\r\n            if (!mobileNav.contains(e.target) && !mobileToggle.contains(e.target)) {\r\n                mobileToggle.classList.remove('active');\r\n                mobileNav.classList.remove('active');\r\n                document.body.classList.remove('menu-open');\r\n            }\r\n        });\r\n    }\r\n    \r\n    // Header scroll effect\r\n    if (mainHeader) {\r\n        window.addEventListener('scroll', function() {\r\n            if (window.scrollY > 100) {\r\n                mainHeader.classList.add('scrolled');\r\n            } else {\r\n                mainHeader.classList.remove('scrolled');\r\n            }\r\n        });\r\n    }\r\n    \r\n    // Smooth scrolling for anchor links\r\n    const anchorLinks = document.querySelectorAll('a[href^=\"#\"]');\r\n    anchorLinks.forEach(link => {\r\n        link.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            const targetId = this.getAttribute('href');\r\n            const targetElement = document.querySelector(targetId);\r\n            \r\n            if (targetElement) {\r\n                const headerHeight = mainHeader ? mainHeader.offsetHeight : 0;\r\n                const targetPosition = targetElement.offsetTop - headerHeight;\r\n                \r\n                window.scrollTo({\r\n                    top: targetPosition,\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        });\r\n    });\r\n    \r\n    // Banner animations\r\n    const bannerElements = document.querySelectorAll('.content-left > *');\r\n    const imageItems = document.querySelectorAll('.image-item');\r\n    \r\n    // Animate banner content on load\r\n    if (bannerElements.length > 0) {\r\n        bannerElements.forEach((element, index) => {\r\n            element.style.opacity = '0';\r\n            element.style.transform = 'translateY(30px)';\r\n            \r\n            setTimeout(() => {\r\n                element.style.transition = 'all 0.8s ease';\r\n                element.style.opacity = '1';\r\n                element.style.transform = 'translateY(0)';\r\n            }, index * 200);\r\n        });\r\n    }\r\n    \r\n    // Animate images with stagger effect\r\n    if (imageItems.length > 0) {\r\n        imageItems.forEach((item, index) => {\r\n            item.style.opacity = '0';\r\n            item.style.transform = 'translateY(50px) scale(0.8)';\r\n            \r\n            setTimeout(() => {\r\n                item.style.transition = 'all 1s ease';\r\n                item.style.opacity = '1';\r\n                item.style.transform = 'translateY(0) scale(1)';\r\n            }, 800 + (index * 300));\r\n        });\r\n    }\r\n    \r\n    // Parallax effect for video background (optional)\r\n    const videoBackground = document.querySelector('.video-background');\r\n    if (videoBackground) {\r\n        window.addEventListener('scroll', function() {\r\n            const scrolled = window.pageYOffset;\r\n            const parallax = scrolled * 0.5;\r\n            videoBackground.style.transform = `translateY(${parallax}px)`;\r\n        });\r\n    }\r\n    \r\n    // Selo boxes hover animation\r\n    const seloBoxes = document.querySelectorAll('.selo-box');\r\n    \r\n    seloBoxes.forEach(box => {\r\n        const description = box.getAttribute('data-description');\r\n        \r\n        // Create description overlay element\r\n        const descriptionElement = document.createElement('div');\r\n        descriptionElement.className = 'selo-description';\r\n        descriptionElement.innerHTML = `<p>${description}</p>`;\r\n        box.appendChild(descriptionElement);\r\n        \r\n        let hoverTimeout;\r\n        \r\n        // Mouse enter event\r\n        box.addEventListener('mouseenter', function() {\r\n            // Clear any existing timeout\r\n            clearTimeout(hoverTimeout);\r\n            \r\n            // Add hover class with slight delay for smooth animation\r\n            hoverTimeout = setTimeout(() => {\r\n                box.classList.add('show-description');\r\n            }, 100);\r\n        });\r\n        \r\n        // Mouse leave event\r\n        box.addEventListener('mouseleave', function() {\r\n            // Clear timeout if mouse leaves quickly\r\n            clearTimeout(hoverTimeout);\r\n            \r\n            // Remove hover class immediately\r\n            box.classList.remove('show-description');\r\n        });\r\n        \r\n        // Touch events for mobile\r\n        box.addEventListener('touchstart', function(e) {\r\n            // Prevent default to avoid issues on mobile\r\n            e.preventDefault();\r\n            \r\n            // Toggle description on touch\r\n            if (box.classList.contains('show-description')) {\r\n                box.classList.remove('show-description');\r\n            } else {\r\n                // Remove description from other boxes first\r\n                seloBoxes.forEach(otherBox => {\r\n                    if (otherBox !== box) {\r\n                        otherBox.classList.remove('show-description');\r\n                    }\r\n                });\r\n                box.classList.add('show-description');\r\n            }\r\n        });\r\n    });\r\n    \r\n    // Close description when clicking outside on mobile\r\n    document.addEventListener('touchstart', function(e) {\r\n        if (!e.target.closest('.selo-box')) {\r\n            seloBoxes.forEach(box => {\r\n                box.classList.remove('show-description');\r\n            });\r\n        }\r\n    });\r\n    \r\n    // Accordion functionality\r\n    const accordionHeaders = document.querySelectorAll('.accordion-header[data-toggle=\"accordion\"]');\r\n    \r\n    accordionHeaders.forEach(header => {\r\n        header.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            \r\n            const accordionItem = this.closest('.accordion-item');\r\n            const accordionContent = accordionItem.querySelector('.accordion-content');\r\n            const accordionIcon = this.querySelector('.accordion-icon');\r\n            \r\n            // Check if this accordion is currently active\r\n            const isActive = accordionContent.classList.contains('active');\r\n            \r\n            // Close all other accordions in the same parent\r\n            const parentAccordion = this.closest('.selo-accordion');\r\n            const allAccordionItems = parentAccordion.querySelectorAll('.accordion-item');\r\n            \r\n            allAccordionItems.forEach(item => {\r\n                const content = item.querySelector('.accordion-content');\r\n                const icon = item.querySelector('.accordion-icon');\r\n                \r\n                if (content && content.classList.contains('active')) {\r\n                    content.classList.remove('active');\r\n                    if (icon) icon.textContent = '+';\r\n                }\r\n            });\r\n            \r\n            // Toggle the clicked accordion if it wasn't active\r\n            if (!isActive) {\r\n                accordionContent.classList.add('active');\r\n                accordionIcon.textContent = '-';\r\n            }\r\n        });\r\n    });\r\n\r\n    // Swiper functionality for testes slider\r\n    const testesSwiper = document.querySelector('.testes-swiper');\r\n    if (testesSwiper) {\r\n        const wrapper = testesSwiper.querySelector('.swiper-wrapper');\r\n        const slides = testesSwiper.querySelectorAll('.swiper-slide');\r\n        const scrollbar = testesSwiper.querySelector('.swiper-scrollbar');\r\n        const scrollbarDrag = testesSwiper.querySelector('.swiper-scrollbar-drag');\r\n        \r\n        if (slides.length > 0 && wrapper && scrollbar && scrollbarDrag) {\r\n            let currentTranslate = 0;\r\n            let maxTranslate = 0;\r\n            let isDragging = false;\r\n            let startX = 0;\r\n            let currentX = 0;\r\n            let animationId = 0;\r\n            let isScrollbarDragging = false;\r\n            \r\n            // Calculate container and content widths\r\n            function calculateDimensions() {\r\n                const containerWidth = testesSwiper.offsetWidth;\r\n                const slideWidth = slides[0].offsetWidth + 24; // 24px = 1.5rem margin\r\n                const totalWidth = slideWidth * slides.length;\r\n                maxTranslate = Math.max(0, totalWidth - containerWidth);\r\n                \r\n                // Show partial slide when there are more than 3 slides\r\n                if (slides.length > 3) {\r\n                    maxTranslate += slideWidth * 0.5; // Show half of the next slide\r\n                }\r\n                \r\n                updateScrollbar();\r\n            }\r\n            \r\n            // Update scrollbar position and size\r\n            function updateScrollbar() {\r\n                if (maxTranslate === 0) {\r\n                    scrollbarDrag.style.width = '100%';\r\n                    scrollbarDrag.style.left = '0%';\r\n                    return;\r\n                }\r\n                \r\n                const progress = Math.abs(currentTranslate) / maxTranslate;\r\n                const dragWidth = Math.max(10, (1 - maxTranslate / (testesSwiper.offsetWidth * 2)) * 100);\r\n                const dragPosition = progress * (100 - dragWidth);\r\n                \r\n                scrollbarDrag.style.width = `${dragWidth}%`;\r\n                scrollbarDrag.style.left = `${dragPosition}%`;\r\n            }\r\n            \r\n            // Set transform\r\n            function setSliderPosition() {\r\n                wrapper.style.transform = `translateX(${-currentTranslate}px)`;\r\n                updateScrollbar();\r\n            }\r\n            \r\n            // Animation function\r\n            function animation() {\r\n                setSliderPosition();\r\n                if (isDragging) requestAnimationFrame(animation);\r\n            }\r\n            \r\n            // Touch/Mouse start\r\n            function dragStart(e) {\r\n                if (isScrollbarDragging) return;\r\n                \r\n                isDragging = true;\r\n                startX = e.type.includes('mouse') ? e.clientX : e.touches[0].clientX;\r\n                currentX = startX;\r\n                \r\n                wrapper.style.transition = 'none';\r\n                testesSwiper.style.cursor = 'grabbing';\r\n                \r\n                if (e.type.includes('mouse')) {\r\n                    document.addEventListener('mousemove', dragMove);\r\n                    document.addEventListener('mouseup', dragEnd);\r\n                }\r\n                \r\n                requestAnimationFrame(animation);\r\n            }\r\n            \r\n            // Touch/Mouse move\r\n            function dragMove(e) {\r\n                if (!isDragging || isScrollbarDragging) return;\r\n                \r\n                e.preventDefault();\r\n                currentX = e.type.includes('mouse') ? e.clientX : e.touches[0].clientX;\r\n                const deltaX = currentX - startX;\r\n                const newTranslate = currentTranslate - deltaX;\r\n                \r\n                // Add resistance at boundaries\r\n                if (newTranslate < 0) {\r\n                    currentTranslate = newTranslate * 0.5;\r\n                } else if (newTranslate > maxTranslate) {\r\n                    currentTranslate = maxTranslate + (newTranslate - maxTranslate) * 0.5;\r\n                } else {\r\n                    currentTranslate = newTranslate;\r\n                }\r\n                \r\n                startX = currentX;\r\n            }\r\n            \r\n            // Touch/Mouse end\r\n            function dragEnd() {\r\n                isDragging = false;\r\n                testesSwiper.style.cursor = 'grab';\r\n                \r\n                // Snap back to boundaries\r\n                if (currentTranslate < 0) {\r\n                    currentTranslate = 0;\r\n                } else if (currentTranslate > maxTranslate) {\r\n                    currentTranslate = maxTranslate;\r\n                }\r\n                \r\n                wrapper.style.transition = 'transform 0.3s ease-out';\r\n                setSliderPosition();\r\n                \r\n                document.removeEventListener('mousemove', dragMove);\r\n                document.removeEventListener('mouseup', dragEnd);\r\n            }\r\n            \r\n            // Scrollbar drag functionality\r\n            function scrollbarDragStart(e) {\r\n                e.preventDefault();\r\n                isScrollbarDragging = true;\r\n                const rect = scrollbar.getBoundingClientRect();\r\n                const clickX = (e.type.includes('mouse') ? e.clientX : e.touches[0].clientX) - rect.left;\r\n                const percentage = clickX / rect.width;\r\n                \r\n                currentTranslate = percentage * maxTranslate;\r\n                if (currentTranslate < 0) currentTranslate = 0;\r\n                if (currentTranslate > maxTranslate) currentTranslate = maxTranslate;\r\n                \r\n                wrapper.style.transition = 'transform 0.3s ease-out';\r\n                setSliderPosition();\r\n                \r\n                if (e.type.includes('mouse')) {\r\n                    document.addEventListener('mousemove', scrollbarDragMove);\r\n                    document.addEventListener('mouseup', scrollbarDragEnd);\r\n                }\r\n            }\r\n            \r\n            function scrollbarDragMove(e) {\r\n                if (!isScrollbarDragging) return;\r\n                \r\n                e.preventDefault();\r\n                const rect = scrollbar.getBoundingClientRect();\r\n                const clickX = (e.type.includes('mouse') ? e.clientX : e.touches[0].clientX) - rect.left;\r\n                const percentage = Math.max(0, Math.min(1, clickX / rect.width));\r\n                \r\n                currentTranslate = percentage * maxTranslate;\r\n                wrapper.style.transition = 'none';\r\n                setSliderPosition();\r\n            }\r\n            \r\n            function scrollbarDragEnd() {\r\n                isScrollbarDragging = false;\r\n                document.removeEventListener('mousemove', scrollbarDragMove);\r\n                document.removeEventListener('mouseup', scrollbarDragEnd);\r\n            }\r\n            \r\n            // Event listeners\r\n            wrapper.addEventListener('mousedown', dragStart);\r\n            wrapper.addEventListener('touchstart', dragStart, { passive: false });\r\n            wrapper.addEventListener('touchmove', dragMove, { passive: false });\r\n            wrapper.addEventListener('touchend', dragEnd);\r\n            \r\n            scrollbar.addEventListener('mousedown', scrollbarDragStart);\r\n            scrollbar.addEventListener('touchstart', scrollbarDragStart, { passive: false });\r\n            scrollbar.addEventListener('touchmove', scrollbarDragMove, { passive: false });\r\n            scrollbar.addEventListener('touchend', scrollbarDragEnd);\r\n            \r\n            // Prevent default drag behavior\r\n            wrapper.addEventListener('dragstart', e => e.preventDefault());\r\n            \r\n            // Wheel support\r\n            testesSwiper.addEventListener('wheel', (e) => {\r\n                if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) {\r\n                    e.preventDefault();\r\n                    currentTranslate += e.deltaX;\r\n                    \r\n                    if (currentTranslate < 0) currentTranslate = 0;\r\n                    if (currentTranslate > maxTranslate) currentTranslate = maxTranslate;\r\n                    \r\n                    wrapper.style.transition = 'transform 0.3s ease-out';\r\n                    setSliderPosition();\r\n                }\r\n            }, { passive: false });\r\n            \r\n            // Initialize and handle resize\r\n            calculateDimensions();\r\n            window.addEventListener('resize', calculateDimensions);\r\n            \r\n            // Initial setup\r\n            testesSwiper.style.cursor = 'grab';\r\n            wrapper.style.transition = 'transform 0.3s ease-out';\r\n        }\r\n    }\r\n    \r\n});\r\n\r\n// Add CSS to prevent body scroll when mobile menu is open\r\nconst menuStyle = document.createElement('style');\r\nmenuStyle.textContent = `\r\n    body.menu-open {\r\n        overflow: hidden;\r\n    }\r\n    \r\n    @media (max-width: 1024px) {\r\n        body.menu-open {\r\n            position: fixed;\r\n            width: 100%;\r\n        }\r\n    }\r\n`;\r\ndocument.head.appendChild(menuStyle);\r\n"],"names":["document","addEventListener","mobileToggle","querySelector","mobileNav","mainHeader","classList","toggle","body","querySelectorAll","forEach","link","remove","e","contains","target","window","scrollY","add","preventDefault","headerHeight","targetId","this","getAttribute","targetElement","offsetHeight","targetPosition","offsetTop","scrollTo","top","behavior","bannerElements","imageItems","length","element","index","style","opacity","transform","setTimeout","transition","item","videoBackground","seloBoxes","parallax","pageYOffset","testesSwiper","box","description","descriptionElement","createElement","className","innerHTML","appendChild","let","hoverTimeout","clearTimeout","otherBox","closest","header","accordionContent","accordionIcon","isActive","content","icon","textContent","wrapper","slides","scrollbar","scrollbarDrag","currentTranslate","maxTranslate","isDragging","startX","currentX","isScrollbarDragging","calculateDimensions","containerWidth","offsetWidth","slideWidth","totalWidth","Math","max","updateScrollbar","dragWidth","dragPosition","width","left","abs","setSliderPosition","animation","requestAnimationFrame","dragStart","type","includes","touches","clientX","cursor","dragMove","dragEnd","deltaX","newTranslate","removeEventListener","scrollbarDragStart","rect","getBoundingClientRect","percentage","scrollbarDragMove","scrollbarDragEnd","clickX","min","passive","deltaY","menuStyle","head"],"mappings":"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"}